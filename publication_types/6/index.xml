<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>6 on MarcusRB: consultor &amp; docente Analítica de Datos</title>
    <link>https://www.marcusrb.com/publication_types/6/</link>
    <description>Recent content in 6 on MarcusRB: consultor &amp; docente Analítica de Datos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 16 Oct 2018 13:05:02 +0200</lastBuildDate>
    
	<atom:link href="https://www.marcusrb.com/publication_types/6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>py012 - Algoritmo BubbleSort Python</title>
      <link>https://www.marcusrb.com/publication/py012-ordenamiento-burbuja-python/</link>
      <pubDate>Tue, 16 Oct 2018 13:05:02 +0200</pubDate>
      
      <guid>https://www.marcusrb.com/publication/py012-ordenamiento-burbuja-python/</guid>
      <description>El ordenamiento burbuja, del inglés (BubbleSort), es un popular algoritmo que funciona intercambiando pares de elementos adyacentes previamente desordenados. La invariante del algoritmo es que al final de la i-ésima interación, el i-ésimo elemento de la lista está en la posición correcta, en la lista ordenada. En este escenario i puede tomar valores 0, 1, &amp;hellip;.m n done n es la cantidad de elementos a ordenar.
Aquí va un ejemplo:</description>
    </item>
    
    <item>
      <title>py003 - Tuplas Python</title>
      <link>https://www.marcusrb.com/publication/py003-tuplas-python/</link>
      <pubDate>Mon, 15 Oct 2018 13:05:02 +0200</pubDate>
      
      <guid>https://www.marcusrb.com/publication/py003-tuplas-python/</guid>
      <description>La función str() puede usarse como una función de conversión, su primer argumento debe ser una cadena o algo convertible a una.
Una cadena es una secuencia finita de símbolos tomados de un alfabeto. Las listas de caracteres se representan mediante el tipo inmutable str que almacena una secuencia de caracteres Unicode.
Se puede llamar sin especificar argumentos, retorna la cadena vacía, indicando un argumento que no sea cadena retorna la representación en str de dicho argumento y definiendo un argumento cadena retorna una copia de ella misma.</description>
    </item>
    
    <item>
      <title>py001 - Tipo de datos</title>
      <link>https://www.marcusrb.com/publication/py001-tipo-de-datos/</link>
      <pubDate>Sun, 14 Oct 2018 13:05:02 +0200</pubDate>
      
      <guid>https://www.marcusrb.com/publication/py001-tipo-de-datos/</guid>
      <description>Python provee dos datos predefinidos de tipo entero, estos son: int y bool. Una expresión booleana con valor True es equivalente a otra con valor 1 y al tener valor False equivale a otra con valor 0, o sea True = 1 y False = 0; es por ello que los tipos boleanos son considerados enteros. [1]
El tamaño de un entero solo se encuentra limitado por la memoria del ordenador, resulta más lento de lo que sería con enteros que pueden representarse nativamente por el procesador del ordenador.</description>
    </item>
    
    <item>
      <title>py002 - Cadenas Python</title>
      <link>https://www.marcusrb.com/publication/py002-cadenas-python/</link>
      <pubDate>Sat, 13 Oct 2018 13:05:02 +0200</pubDate>
      
      <guid>https://www.marcusrb.com/publication/py002-cadenas-python/</guid>
      <description>La función str() puede usarse como una función de conversión, su primer argumento debe ser una cadena o algo convertible a una.
Una cadena es una secuencia finita de símbolos tomados de un alfabeto. Las listas de caracteres se representan mediante el tipo inmutable str que almacena una secuencia de caracteres Unicode.
Se puede llamar sin especificar argumentos, retorna la cadena vacía, indicando un argumento que no sea cadena retorna la representación en str de dicho argumento y definiendo un argumento cadena retorna una copia de ella misma.</description>
    </item>
    
  </channel>
</rss>